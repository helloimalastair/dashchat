{
  "version": 3,
  "sources": ["../node_modules/hono/dist/response.js", "../node_modules/hono/dist/utils/url.js", "../node_modules/hono/dist/context.js", "../node_modules/hono/dist/compose.js", "../node_modules/hono/dist/router.js", "../node_modules/hono/dist/router/trie-router/node.js", "../node_modules/hono/dist/router/trie-router/router.js", "../node_modules/hono/dist/router/trie-router/index.js", "../node_modules/hono/dist/hono.js", "../node_modules/hono/dist/index.js", "../node_modules/hono/dist/middleware/cookie/index.js", "../src/index.ts", "../node_modules/.pnpm/nanoid@3.3.4/node_modules/nanoid/index.browser.js", "../src/Utils/Coder.ts", "../src/Utils/GenerateIDs.ts", "../src/Utils/NameRegex.ts", "../src/Utils/ErrorResponse.ts", "../src/Stream/generateUploadLink.ts", "../src/Stream/ReadyAwait.ts", "../src/Routes/createRoom.ts", "../src/Routes/identifyUser.ts", "../src/Routes/upgradeToWebSocket.ts", "../src/Room/AnalyticsUpdate.ts", "../src/Room/utils.ts", "../src/Room/MessageHandler.ts", "../src/Room/ErrorHandler.ts", "../src/Room/index.ts", "../src/Analytics/index.ts"],
  "sourcesContent": ["\"use strict\";\n/*\n  This Response object is for better performance.\n  This object is used in a Context before the Handler dispatches.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HonoResponse = void 0;\nconst errorMessage = 'Response is not finalized';\nclass HonoResponse {\n    constructor(_data, init) {\n        this.headers = new Headers(init.headers);\n        this.status = init.status ?? 404;\n        this._finalized = false;\n    }\n    clone() {\n        throw new Error(errorMessage);\n    }\n    arrayBuffer() {\n        throw new Error(errorMessage);\n    }\n    blob() {\n        throw new Error(errorMessage);\n    }\n    formData() {\n        throw new Error(errorMessage);\n    }\n    json() {\n        throw new Error(errorMessage);\n    }\n    text() {\n        throw new Error(errorMessage);\n    }\n}\nexports.HonoResponse = HonoResponse;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergePath = exports.isAbsoluteURL = exports.getPathFromURL = exports.getPattern = exports.splitPath = void 0;\nconst URL_REGEXP = /^https?:\\/\\/[a-zA-Z0-9\\-\\.:]+(\\/?[^?#]*)/;\nconst splitPathCache = {};\nconst splitPath = (path) => {\n    let paths = splitPathCache[path];\n    if (paths) {\n        return paths;\n    }\n    paths = path.split(/\\//); // faster than path.split('/')\n    if (paths[0] === '') {\n        paths.shift();\n    }\n    splitPathCache[path] = paths;\n    return paths;\n};\nexports.splitPath = splitPath;\nconst patternCache = {};\nconst getPattern = (label) => {\n    // *            => wildcard\n    // :id{[0-9]+}  => ([0-9]+)\n    // :id          => (.+)\n    //const name = ''\n    if (label === '*') {\n        return '*';\n    }\n    const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    if (match) {\n        if (!patternCache[label]) {\n            if (match[2]) {\n                patternCache[label] = [label, match[1], new RegExp('^' + match[2] + '$')];\n            }\n            else {\n                patternCache[label] = [label, match[1], true];\n            }\n        }\n        return patternCache[label];\n    }\n    return null;\n};\nexports.getPattern = getPattern;\nconst pathFromURLCache = {};\nconst getPathFromURL = (url, params = { strict: true }) => {\n    // if strict routing is false => `/hello/hey/` and `/hello/hey` are treated the same\n    // default is true\n    if (params.strict === false && url.endsWith('/')) {\n        url = url.slice(0, -1);\n    }\n    let path = pathFromURLCache[url];\n    if (path)\n        return path;\n    const match = url.match(URL_REGEXP);\n    path = match ? match[1] : '';\n    pathFromURLCache[url] = path;\n    return path;\n};\nexports.getPathFromURL = getPathFromURL;\nconst isAbsoluteURL = (url) => {\n    const match = url.match(URL_REGEXP);\n    if (match) {\n        return true;\n    }\n    return false;\n};\nexports.isAbsoluteURL = isAbsoluteURL;\nconst mergePath = (...paths) => {\n    let p = '';\n    let endsWithSlash = false;\n    for (let path of paths) {\n        /* ['/hey/','/say'] => ['/hey', '/say'] */\n        if (p.endsWith('/')) {\n            p = p.slice(0, -1);\n            endsWithSlash = true;\n        }\n        /* ['/hey','say'] => ['/hey', '/say'] */\n        if (!path.startsWith('/')) {\n            path = `/${path}`;\n        }\n        /* ['/hey/', '/'] => `/hey/` */\n        if (path === '/' && endsWithSlash) {\n            p = `${p}/`;\n        }\n        else if (path !== '/') {\n            p = `${p}${path}`;\n        }\n        /* ['/', '/'] => `/` */\n        if (path === '/' && p === '') {\n            p = '/';\n        }\n    }\n    return p;\n};\nexports.mergePath = mergePath;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Context = void 0;\nconst response_1 = require(\"./response\");\nconst url_1 = require(\"./utils/url\");\nclass Context {\n    constructor(req, opts = {\n        env: {},\n        event: undefined,\n        res: undefined,\n    }) {\n        this._status = 200;\n        this._pretty = false;\n        this._prettySpace = 2;\n        this.req = this.initRequest(req);\n        this._map = {};\n        Object.assign(this, opts);\n        if (!this.res) {\n            const res = new response_1.HonoResponse(null, { status: 404 });\n            res._finalized = false;\n            this.res = res;\n        }\n    }\n    initRequest(req) {\n        req.header = ((name) => {\n            if (name) {\n                return req.headers.get(name);\n            }\n            else {\n                const result = {};\n                for (const [key, value] of req.headers) {\n                    result[key] = value;\n                }\n                return result;\n            }\n        });\n        req.query = ((key) => {\n            const url = new URL(req.url);\n            if (key) {\n                return url.searchParams.get(key);\n            }\n            else {\n                const result = {};\n                for (const key of url.searchParams.keys()) {\n                    result[key] = url.searchParams.get(key) || '';\n                }\n                return result;\n            }\n        });\n        req.queries = ((key) => {\n            const url = new URL(req.url);\n            if (key) {\n                return url.searchParams.getAll(key);\n            }\n            else {\n                const result = {};\n                for (const key of url.searchParams.keys()) {\n                    result[key] = url.searchParams.getAll(key);\n                }\n                return result;\n            }\n        });\n        return req;\n    }\n    header(name, value) {\n        this.res.headers.set(name, value);\n    }\n    status(status) {\n        this._status = status;\n    }\n    set(key, value) {\n        this._map[key] = value;\n    }\n    get(key) {\n        return this._map[key];\n    }\n    pretty(prettyJSON, space = 2) {\n        this._pretty = prettyJSON;\n        this._prettySpace = space;\n    }\n    newResponse(data, init = {}) {\n        init.status = init.status || this._status || 200;\n        const headers = {};\n        this.res.headers.forEach((v, k) => {\n            headers[k] = v;\n        });\n        init.headers = Object.assign(headers, init.headers);\n        return new Response(data, init);\n    }\n    body(data, status = this._status, headers = {}) {\n        return this.newResponse(data, {\n            status: status,\n            headers: headers,\n        });\n    }\n    text(text, status = this._status, headers = {}) {\n        if (typeof text !== 'string') {\n            throw new TypeError('text method arg must be a string!');\n        }\n        headers['Content-Type'] || (headers['Content-Type'] = 'text/plain; charset=UTF-8');\n        return this.body(text, status, headers);\n    }\n    json(object, status = this._status, headers = {}) {\n        if (typeof object !== 'object') {\n            throw new TypeError('json method arg must be an object!');\n        }\n        const body = this._pretty\n            ? JSON.stringify(object, null, this._prettySpace)\n            : JSON.stringify(object);\n        headers['Content-Type'] || (headers['Content-Type'] = 'application/json; charset=UTF-8');\n        return this.body(body, status, headers);\n    }\n    html(html, status = this._status, headers = {}) {\n        if (typeof html !== 'string') {\n            throw new TypeError('html method arg must be a string!');\n        }\n        headers['Content-Type'] || (headers['Content-Type'] = 'text/html; charset=UTF-8');\n        return this.body(html, status, headers);\n    }\n    redirect(location, status = 302) {\n        if (typeof location !== 'string') {\n            throw new TypeError('location must be a string!');\n        }\n        if (!(0, url_1.isAbsoluteURL)(location)) {\n            const url = new URL(this.req.url);\n            url.pathname = location;\n            location = url.toString();\n        }\n        return this.newResponse(null, {\n            status: status,\n            headers: {\n                Location: location,\n            },\n        });\n    }\n}\nexports.Context = Context;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compose = void 0;\nconst context_1 = require(\"./context\");\n// Based on the code in the MIT licensed `koa-compose` package.\nconst compose = (middleware, onError, onNotFound) => {\n    return async (context, next) => {\n        let index = -1;\n        return dispatch(0);\n        async function dispatch(i) {\n            if (i <= index) {\n                return Promise.reject(new Error('next() called multiple times'));\n            }\n            let handler = middleware[i];\n            index = i;\n            if (i === middleware.length && next)\n                handler = next;\n            if (!handler) {\n                if (context instanceof context_1.Context && context.res._finalized === false && onNotFound) {\n                    context.res = await onNotFound(context);\n                    context.res._finalized = true;\n                }\n                return Promise.resolve(context);\n            }\n            return Promise.resolve(handler(context, () => dispatch(i + 1)))\n                .then(async (res) => {\n                // If handler return Response like `return c.text('foo')`\n                if (res && context instanceof context_1.Context) {\n                    context.res = res;\n                    context.res._finalized = true;\n                }\n                return context;\n            })\n                .catch((err) => {\n                if (context instanceof context_1.Context && onError) {\n                    if (err instanceof Error) {\n                        context.res = onError(err, context);\n                        context.res._finalized = true;\n                    }\n                    return context;\n                }\n                else {\n                    throw err;\n                }\n            });\n        }\n    };\n};\nexports.compose = compose;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.METHOD_NAME_ALL_LOWERCASE = exports.METHOD_NAME_ALL = void 0;\nexports.METHOD_NAME_ALL = 'ALL';\nexports.METHOD_NAME_ALL_LOWERCASE = 'all';\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Node = void 0;\nconst router_1 = require(\"../../router\");\nconst url_1 = require(\"../../utils/url\");\nfunction findParam(node, name) {\n    for (let i = 0, len = node.patterns.length; i < len; i++) {\n        if (typeof node.patterns[i] === 'object' && node.patterns[i][1] === name) {\n            return true;\n        }\n    }\n    const nodes = Object.values(node.children);\n    for (let i = 0, len = nodes.length; i < len; i++) {\n        if (findParam(nodes[i], name)) {\n            return true;\n        }\n    }\n    return false;\n}\nclass Node {\n    constructor(method, handler, children) {\n        this.order = 0;\n        this.children = children || {};\n        this.methods = [];\n        if (method && handler) {\n            const m = {};\n            m[method] = { handler: handler, score: 0, name: this.name };\n            this.methods = [m];\n        }\n        this.patterns = [];\n    }\n    insert(method, path, handler) {\n        this.name = `${method} ${path}`;\n        this.order = ++this.order;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let curNode = this;\n        const parts = (0, url_1.splitPath)(path);\n        const parentPatterns = [];\n        const errorMessage = (name) => {\n            return `Duplicate param name, use another name instead of '${name}' - ${method} ${path} <--- '${name}'`;\n        };\n        for (let i = 0, len = parts.length; i < len; i++) {\n            const p = parts[i];\n            if (Object.keys(curNode.children).includes(p)) {\n                parentPatterns.push(...curNode.patterns);\n                curNode = curNode.children[p];\n                continue;\n            }\n            curNode.children[p] = new Node();\n            const pattern = (0, url_1.getPattern)(p);\n            if (pattern) {\n                if (typeof pattern === 'object') {\n                    for (let j = 0, len = parentPatterns.length; j < len; j++) {\n                        if (typeof parentPatterns[j] === 'object' && parentPatterns[j][1] === pattern[1]) {\n                            throw new Error(errorMessage(pattern[1]));\n                        }\n                    }\n                    if (Object.values(curNode.children).some((n) => findParam(n, pattern[1]))) {\n                        throw new Error(errorMessage(pattern[1]));\n                    }\n                }\n                curNode.patterns.push(pattern);\n                parentPatterns.push(...curNode.patterns);\n            }\n            parentPatterns.push(...curNode.patterns);\n            curNode = curNode.children[p];\n        }\n        let score = 1;\n        if (path === '*') {\n            score = score + this.order * 0.01;\n        }\n        else {\n            score = parts.length + this.order * 0.01;\n        }\n        if (!curNode.methods.length) {\n            curNode.methods = [];\n        }\n        const m = {};\n        const handlerSet = { handler: handler, name: this.name, score: score };\n        m[method] = handlerSet;\n        curNode.methods.push(m);\n        return curNode;\n    }\n    getHandlerSets(node, method, wildcard) {\n        const handlerSets = [];\n        node.methods.map((m) => {\n            const handlerSet = m[method] || m[router_1.METHOD_NAME_ALL];\n            if (handlerSet !== undefined) {\n                const hs = { ...handlerSet };\n                if (wildcard) {\n                    hs.score = handlerSet.score - 1;\n                }\n                handlerSets.push(hs);\n                return;\n            }\n        });\n        return handlerSets;\n    }\n    next(node, part, method, isLast) {\n        const handlerSets = [];\n        const nextNodes = [];\n        const params = {};\n        for (let j = 0, len = node.patterns.length; j < len; j++) {\n            const pattern = node.patterns[j];\n            // Wildcard\n            // '/hello/*/foo' => match /hello/bar/foo\n            if (pattern === '*') {\n                const astNode = node.children['*'];\n                if (astNode) {\n                    handlerSets.push(...this.getHandlerSets(astNode, method));\n                    nextNodes.push(astNode);\n                }\n                continue;\n            }\n            if (part === '')\n                continue;\n            // Named match\n            // `/posts/:id` => match /posts/123\n            const [key, name, matcher] = pattern;\n            if (matcher === true || (matcher instanceof RegExp && matcher.test(part))) {\n                if (typeof key === 'string') {\n                    if (isLast === true) {\n                        handlerSets.push(...this.getHandlerSets(node.children[key], method));\n                    }\n                    nextNodes.push(node.children[key]);\n                }\n                if (typeof name === 'string') {\n                    params[name] = part;\n                }\n            }\n        }\n        const nextNode = node.children[part];\n        if (nextNode) {\n            if (isLast === true) {\n                // '/hello/*' => match '/hello'\n                if (nextNode.children['*']) {\n                    handlerSets.push(...this.getHandlerSets(nextNode.children['*'], method, true));\n                }\n                handlerSets.push(...this.getHandlerSets(nextNode, method));\n            }\n            nextNodes.push(nextNode);\n        }\n        const next = {\n            nodes: nextNodes,\n            handlerSets: handlerSets,\n            params: params,\n        };\n        return next;\n    }\n    search(method, path) {\n        const handlerSets = [];\n        let params = {};\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const curNode = this;\n        let curNodes = [curNode];\n        const parts = (0, url_1.splitPath)(path);\n        for (let i = 0, len = parts.length; i < len; i++) {\n            const p = parts[i];\n            const isLast = i === len - 1;\n            const tempNodes = [];\n            for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n                const res = this.next(curNodes[j], p, method, isLast);\n                if (res.nodes.length === 0) {\n                    continue;\n                }\n                handlerSets.push(...res.handlerSets);\n                params = { ...params, ...res.params };\n                tempNodes.push(...res.nodes);\n            }\n            curNodes = tempNodes;\n        }\n        if (handlerSets.length <= 0)\n            return null;\n        const handlers = handlerSets\n            .sort((a, b) => {\n            return a.score - b.score;\n        })\n            .map((s) => {\n            return s.handler;\n        });\n        return { handlers, params };\n    }\n}\nexports.Node = Node;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TrieRouter = void 0;\nconst node_1 = require(\"./node\");\nclass TrieRouter {\n    constructor() {\n        this.node = new node_1.Node();\n    }\n    add(method, path, handler) {\n        this.node.insert(method, path, handler);\n    }\n    match(method, path) {\n        return this.node.search(method, path);\n    }\n}\nexports.TrieRouter = TrieRouter;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TrieRouter = void 0;\nvar router_1 = require(\"./router\");\nObject.defineProperty(exports, \"TrieRouter\", { enumerable: true, get: function () { return router_1.TrieRouter; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Hono = void 0;\nconst compose_1 = require(\"./compose\");\nconst context_1 = require(\"./context\");\nconst router_1 = require(\"./router\");\nconst trie_router_1 = require(\"./router/trie-router\"); // Default Router\nconst url_1 = require(\"./utils/url\");\nconst methods = ['get', 'post', 'put', 'delete', 'head', 'options', 'patch'];\nfunction defineDynamicClass() {\n    return class {\n    };\n}\nclass Hono extends defineDynamicClass() {\n    constructor(init = {}) {\n        super();\n        this.router = new trie_router_1.TrieRouter();\n        this.strict = true; // strict routing - default is true\n        this._tempPath = '';\n        this.path = '/';\n        this.routes = [];\n        this.notFoundHandler = async (c) => {\n            const message = '404 Not Found';\n            return c.text(message, 404);\n        };\n        this.errorHandler = (err, c) => {\n            console.error(`${err.stack || err.message}`);\n            const message = 'Internal Server Error';\n            return c.text(message, 500);\n        };\n        const allMethods = [...methods, router_1.METHOD_NAME_ALL_LOWERCASE];\n        allMethods.map((method) => {\n            this[method] = (args1, ...args) => {\n                if (typeof args1 === 'string') {\n                    this.path = args1;\n                }\n                else {\n                    this.addRoute(method, this.path, args1);\n                }\n                args.map((handler) => {\n                    if (typeof handler !== 'string') {\n                        this.addRoute(method, this.path, handler);\n                    }\n                });\n                return this;\n            };\n        });\n        Object.assign(this, init);\n    }\n    route(path, app) {\n        this._tempPath = path;\n        if (app) {\n            app.routes.map((r) => {\n                this.addRoute(r.method, r.path, r.handler);\n            });\n            this._tempPath = '';\n        }\n        return this;\n    }\n    use(arg1, ...handlers) {\n        if (typeof arg1 === 'string') {\n            this.path = arg1;\n        }\n        else {\n            handlers.unshift(arg1);\n        }\n        handlers.map((handler) => {\n            this.addRoute(router_1.METHOD_NAME_ALL, this.path, handler);\n        });\n        return this;\n    }\n    onError(handler) {\n        this.errorHandler = handler;\n        return this;\n    }\n    notFound(handler) {\n        this.notFoundHandler = handler;\n        return this;\n    }\n    addRoute(method, path, handler) {\n        method = method.toUpperCase();\n        if (this._tempPath) {\n            path = (0, url_1.mergePath)(this._tempPath, path);\n        }\n        this.router.add(method, path, handler);\n        const r = { path: path, method: method, handler: handler };\n        this.routes.push(r);\n    }\n    matchRoute(method, path) {\n        return this.router.match(method, path);\n    }\n    async dispatch(request, event, env) {\n        const path = (0, url_1.getPathFromURL)(request.url, { strict: this.strict });\n        const method = request.method;\n        const result = this.matchRoute(method, path);\n        request.param = ((key) => {\n            if (result) {\n                if (key) {\n                    return result.params[key];\n                }\n                else {\n                    return result.params;\n                }\n            }\n            return null;\n        });\n        const handlers = result ? result.handlers : [this.notFoundHandler];\n        const c = new context_1.Context(request, {\n            env: env,\n            event: event,\n        });\n        c.notFound = () => this.notFoundHandler(c);\n        const composed = (0, compose_1.compose)(handlers, this.errorHandler, this.notFoundHandler);\n        let context;\n        try {\n            context = await composed(c);\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                return this.errorHandler(err, c);\n            }\n            throw err;\n        }\n        return context.res;\n    }\n    async handleEvent(event) {\n        return this.dispatch(event.request, event);\n    }\n    async fetch(request, env, event) {\n        return this.dispatch(request, event, env);\n    }\n    request(input, requestInit) {\n        const req = input instanceof Request ? input : new Request(input, requestInit);\n        return this.dispatch(req);\n    }\n    fire() {\n        addEventListener('fetch', (event) => {\n            event.respondWith(this.handleEvent(event));\n        });\n    }\n}\nexports.Hono = Hono;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Context = exports.Hono = void 0;\nvar hono_1 = require(\"./hono\");\nObject.defineProperty(exports, \"Hono\", { enumerable: true, get: function () { return hono_1.Hono; } });\nvar context_1 = require(\"./context\");\nObject.defineProperty(exports, \"Context\", { enumerable: true, get: function () { return context_1.Context; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cookie = void 0;\nconst cookie = () => {\n    return async (c, next) => {\n        c.req.cookie = ((name) => {\n            const cookie = c.req.headers.get('Cookie') || '';\n            const obj = parse(cookie);\n            if (name) {\n                const value = obj[name];\n                return value;\n            }\n            else {\n                return obj;\n            }\n        });\n        c.cookie = (name, value, opt) => {\n            const cookie = serialize(name, value, opt);\n            c.header('Set-Cookie', cookie);\n        };\n        await next();\n    };\n};\nexports.cookie = cookie;\nconst parse = (cookie) => {\n    const pairs = cookie.split(/;\\s*/g);\n    const parsedCookie = {};\n    for (let i = 0, len = pairs.length; i < len; i++) {\n        const pair = pairs[i].split(/\\s*=\\s*([^\\s]+)/);\n        parsedCookie[pair[0]] = decodeURIComponent(pair[1]);\n    }\n    return parsedCookie;\n};\nconst serialize = (name, value, opt = {}) => {\n    value = encodeURIComponent(value);\n    let cookie = `${name}=${value}`;\n    if (opt.maxAge) {\n        cookie += `; Max-Age=${Math.floor(opt.maxAge)}`;\n    }\n    if (opt.domain) {\n        cookie += '; Domain=' + opt.domain;\n    }\n    if (opt.path) {\n        cookie += '; Path=' + opt.path;\n    }\n    if (opt.expires) {\n        cookie += '; Expires=' + opt.expires.toUTCString();\n    }\n    if (opt.httpOnly) {\n        cookie += '; HttpOnly';\n    }\n    if (opt.secure) {\n        cookie += '; Secure';\n    }\n    if (opt.sameSite) {\n        cookie += `; SameSite=${opt.sameSite}`;\n    }\n    return cookie;\n};\n", "import { Hono } from \"hono\";\nimport { cookie } from \"hono/cookie\";\nimport { createRoom, identifyUser, upgradeToWebSocket } from \"routes\";\nimport { awaitReady, markReady } from \"stream\";\n\nconst app = new Hono<Environment>();\n\n// Add Cookie-Parsing Middleware\napp.use(\"*\", cookie());\n\napp.get(\"/hello\", c => c.text(\"Hello World!\"));\n\n// Add Username\napp.get(\"/identify\", identifyUser);\n\n// Create Room\napp.post(\"/create\", createRoom);\n\n// Wait for Upload/Processing to finish\napp.get(\"/processing/:id\", awaitReady);\n\n// Incoming Stream Processing Completion Webhooks\napp.all(\"/processing/complete\", markReady);\n\n// Upgrade to WebSocket\napp.get(\"/rooms/:id\", upgradeToWebSocket);\n\n// Fallback, routes requests to Pages \"backend\"\napp.notFound(async ({req}) => await fetch(req));\n\nexport default app;\nexport { Room } from \"Room\";\nexport { Analytics } from \"Analytics\";", "import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n", "const encoder = new TextEncoder(),\n  decoder = new TextDecoder();\n\nexport { encoder, decoder };", "const randInRange = (max: number) => Math.floor(crypto.getRandomValues(new Uint32Array(1))[0]/(0xffffffff + max)),\n  randOf = (collection: string) => () => collection[randInRange(collection.length)],\n  generatePhonetic = () => {\n    const randVowel = randOf(\"aeiou\"),\n    randConsonant = randOf(\"bcdfghjklmnpqrstvwxyz\");\n    let id = \"\";\n    for (let i = 0; i < 10; i++) id += (i % 2 == randInRange(1)) ? randConsonant() : randVowel();\n    return id;\n  },\n  generateID = (str: string) => {\n    return str.split(\"\").map(e => e.charCodeAt(0).toString(16)).join(\"\");\n  };\nexport { generateID, generatePhonetic };", "const NameRegex = /^[a-zA-Z0-9\\-\\_]{5,50}$/;\nexport { NameRegex };", "const generateErrorResponse = (error: string, status?: number) => new Response(error, {status: status || 400}),\n  usernameDoesNotExist = () => generateErrorResponse(\"Username does not exist\");\nexport { generateErrorResponse, usernameDoesNotExist };", "import { generateID } from \"utils\";\n\nexport async function generateUploadLink(userID: string, env: Environment) {\n  const uploadLink = await fetch(`https://api.cloudflare.com/client/v4/accounts/${env.CFAccountID}/stream?direct_user=true`, {\n      method: \"POST\",\n      headers: {\n        authorization: env.CFAPIToken,\n        \"upload-length\": \"21600\",\n        \"tus-resumable\": \"1.0.0\",\n        \"upload-metadata\": `allowedOrigins WyJkYXNoY2hhdC5hcHAiXQ==,creator ${btoa(userID)},requireSignedUrls`\n      }\n    }),\n    streamMediaID = uploadLink.headers.get(\"stream-media-id\"),\n    uploadLinkURL = uploadLink.headers.get(\"location\");\n  if(!streamMediaID || !uploadLinkURL) throw new Error(\"Cloudflare API returned an invalid response\");\n  const id = generateID(streamMediaID);\n  await env.KV.put(`${env.KVPrefix}-ProcessingComplete-${id}`, \"false\");\n  return {\n    url: uploadLinkURL,\n    id\n  };\n}", "import { decoder, encoder, generateID } from \"Utils\";\nimport type { Handler } from \"hono\";\n\ninterface WebhookSignatureInfo {\n  time: string;\n  sig1: string;\n}\n\n\nconst markReady: Handler<string, Environment> = async (c, next) => {\n    if(c.req.headers.get(\"content-type\") !== \"application/json\") {\n      await next();\n      return c.res;\n    }\n    const WHSig = c.req.headers.get(\"Webhook-Signature\"),\n      body = await c.req.text();\n    if(!WHSig) {\n      await next();\n      return c.res;\n    }\n    let data: any;\n    try {\n      const SignatureInfo: WebhookSignatureInfo = Object.fromEntries(WHSig.split(\",\").map(e => e.split(\"=\"))),\n        source = `${SignatureInfo.time}.${body}`,\n        key = await crypto.subtle.importKey(\"raw\", encoder.encode(c.env.StreamWebhookSecret), {name: \"HMAC\", hash: {name: \"SHA-512\"}}, false, [\"sign\"]),\n        signature = decoder.decode(await crypto.subtle.sign(\"HMAC\", key, encoder.encode(source)));\n      if(signature !== SignatureInfo.sig1) throw new Error(\"\");\n      data = JSON.parse(body);\n    } catch(e) {\n      await next();\n      return c.res;\n    }\n    await c.env.KV.put(`${c.env.KVPrefix}-ProcessingComplete-${generateID(data.uid)}`, \"true\");\n    return c.text(\"OK\");\n  },\n  awaitReady: Handler<string, Environment> = async c => {\n    const isDone = await c.env.KV.get<boolean>(`${c.env.KVPrefix}-ProcessingComplete-${c.req.param(\"id\")}`, { type: \"json\" });\n    if(isDone === null) {\n      c.status(404);\n      return c.text(\"Video ID not recognized\");\n    }\n    return c.text(isDone ? \"true\" : \"false\");\n  };\n\nexport { awaitReady, markReady };", "import { nanoid } from \"nanoid\";\nimport { generateUploadLink } from \"stream\";\nimport { generateErrorResponse ,generatePhonetic, NameRegex, usernameDoesNotExist } from \"utils\";\nimport type { Handler } from \"hono\";\n\ninterface creationBody {\n  roomName: string;\n  password: string;\n  videoLength: number;\n}\n\nconst createRoom: Handler<string, Environment> = async c => {\n  if(c.req.headers.get(\"content-type\") !== \"application/json\") return generateErrorResponse(\"Content-Type must be \\\"application/json\\\"\");\n  let body: creationBody;\n  try {\n    body = await c.req.json();\n  } catch(e) {\n    return generateErrorResponse(\"Body must be valid JSON\");\n  }\n  const uname = c.req.cookie(\"uname\");\n  // Username Verification\n  if(!uname) return usernameDoesNotExist();\n  if(!NameRegex.test(uname)) return generateErrorResponse(\"Username did not pass regex\");\n  // Room Name Verification\n  if(!body.roomName) return generateErrorResponse(\"No room name provided\");\n  if(!NameRegex.test(body.roomName)) return generateErrorResponse(\"Room name did not pass regex\");\n  // User ID\n  const owner = c.req.cookie(\"userId\") || nanoid(),\n    external = generatePhonetic(),\n    isGDPR = c.req.cf?.continent === \"EU\",\n    doOpts = isGDPR ? { jurisdiction: \"EU\" } : undefined,\n    doId = c.env.ROOMS.newUniqueId(doOpts);\n  await c.env.KV.put(`${c.env.KVPrefix}-${external}`, JSON.stringify({\n    status: \"open\",\n    owner,\n    doId: doId.toString()\n  }));\n  await c.env.ROOMS.get(doId).fetch(new Request(c.env.InternalURL + \"/startup\", {body: JSON.stringify({\n    external,\n    isGDPR,\n    owner,\n    name: body.roomName,\n    videoLength: body.videoLength\n  } as StartupData)}));\n  c.cookie(\"userId\", owner, {\n    httpOnly: true,\n    maxAge: 31622400,\n    sameSite: \"Strict\",\n    secure: true\n  });\n  \n  return c.json({\n    external,\n    isGDPR,\n    uploadLink: generateUploadLink(owner, c.env)\n  });\n};\n\nexport { createRoom };", "import { generateErrorResponse, NameRegex } from \"utils\";\nimport type { Handler } from \"hono\";\n\nconst identifyUser: Handler<string, Environment> = async c => {\n  const uname = await c.req.text();\n  if(!NameRegex.test(uname)) return generateErrorResponse(\"Username did not pass regex\");\n  c.cookie(\"uname\", uname, {\n    maxAge: 31622400,\n    sameSite: \"Strict\",\n    secure: true\n  });\n  return c.text(\"OK\");\n};\n\nexport { identifyUser };", "import { generateErrorResponse, usernameDoesNotExist } from \"utils\";\nimport type { Room } from \"Room\";\nimport type { Handler } from \"hono\";\n\nconst upgradeToWebSocket: Handler<string, Environment> = async (c, next) => {\n  const upgradeHeader = c.req.headers.get(\"Upgrade\");\n  // If request is not a WebSocket request, pass it to the next handler\n  if (!upgradeHeader || upgradeHeader !== \"websocket\") return fetch(c.req);\n  // Username must be set BEFORE connecting to WebSocket\n  if(!c.req.cookie(\"uname\")) return usernameDoesNotExist();\n  // Attempt to locate room\n  const room = await c.env.KV.get<Room>(`${c.env.KVPrefix}-rooms-${c.req.param(\"id\")}`, {type: \"json\"});\n  // If room does not exist, return Room-Specific 404 Error\n  if(!room) return generateErrorResponse(\"Room does not exist\", 404);\n  // If room exists, check if room is locked\n  if(room.status !== \"open\") return generateErrorResponse(`Room is ${room.status}`, 403);\n  // Reconstruct response to match specification for DO\n  const request = new Request(`${c.env.InternalURL}/connect`, c.req);\n  // If user has id matching owner, add owner header\n  if (room.ids.owner=== c.req.cookie(\"userId\")) request.headers.set(\"isOwner\", \"true\");\n  // Convert uname cookie to header\n  request.headers.set(\"uname\", c.req.cookie(\"uname\"));\n  return await c.env.ROOMS.get(c.env.ROOMS.idFromString(room.ids.do)).fetch(request);\n};\n\nexport { upgradeToWebSocket };", "import type { Room } from \".\";\n\nexport default async function analyticsUpdate(room: Room) {\n  if(!room.ids.external) return false;\n  const data: AnalyticsDeliverable = {\n    room: room.ids.external,\n    data: room.connections.reduce((a, b) => {\n      if(b.location) a[b.location] = (a[b.location] || 0) + 1;\n      return a;\n    }, {} as AnalyticsCountries)\n  };\n  await room.env.ANALYTICS.get(room.env.ANALYTICS.idFromName(\"analytics\")).fetch(new Request(JSON.stringify(data)));\n  return true;\n}", "import type { Room } from \".\";\n\n// Closes down all connections\nasync function closeAll(room: Room, message = \"Room deleted\") {\n  room.connections.forEach(c => c.ws.close(1001, message));\n  room.connections = [];\n  room.owner = undefined;\n}\n\n// Broadcast Message to All Connections\nasync function broadcast(room: Room, message: any, sender: string) {\n  room.connections.forEach(c => {\n    if(c.uname !== sender) c.ws.send(message);\n  });\n}\n\nasync function updateStatus(room: Room, status: RoomStatus) {\n  if(!room.ids.external) return false;\n  room.status = status;\n  await room.env.KV.put(`${room.env.KVPrefix}-${room.ids.external}`, JSON.stringify({\n    status: room.status,\n    ownerId: room.ids.external,\n    doId: room.ids.do\n  }));\n  return true;\n}\n\nexport { broadcast, closeAll, updateStatus };", "import { broadcast, closeAll, updateStatus } from \"./utils\";\nimport type { Room } from \".\";\n\nconst decoder = new TextDecoder(),\n  errorGenerator = (m: string) => JSON.stringify({time: Date.now(), type: \"error\", message: m}),\n  systemGenerator = (m: string) => JSON.stringify({time: Date.now(), type: \"system\", message: m});\n\nexport default async function handleMessage(room: Room, connection: Connection, event: MessageEvent): Promise<void> {\n  let payload: RoomCommunication;\n  try {\n    if(typeof event.data === \"string\") payload = JSON.parse(event.data);\n    else payload = JSON.parse(decoder.decode(event.data));\n  } catch(e) {\n    return connection.ws.send(\"Invalid/Unparseable JSON\");\n  }\n  if(payload.message) {\n    room.log.push({time: Date.now(), user: connection.uname, message: payload.message});\n    return connection.ws.send(JSON.stringify({time: Date.now(), type: \"message\", message: payload.message}));\n  }\n  switch(payload.command) {\n    case \"delete\":\n      if(!connection.isOwner) return connection.ws.send(errorGenerator(\"Unauthorized. Must be owner to use commands.\"));\n      await Promise.all([\n        closeAll(room),\n        room.storage.deleteAll(),\n        room.env.KV.delete(`${room.env.KVPrefix}-${room.ids.external}`),\n      ]);\n      return;\n    case \"end\":\n      if(!connection.isOwner) return connection.ws.send(errorGenerator(\"Unauthorized. Must be owner to use commands.\"));\n      await updateStatus(room, \"ended\");\n      await closeAll(room, \"Room ended.\");\n      room.log.push({time: Date.now(), user: connection.uname, command: \"end\"});\n      await room.storage.setAlarm(Date.now() + 60000);\n      return;\n    case \"lock\":\n      if(!connection.isOwner) return connection.ws.send(errorGenerator(\"Unauthorized. Must be owner to use commands.\"));\n      if(room.status === \"locked\") return connection.ws.send(errorGenerator(\"Error: Room is already locked\"));\n      await updateStatus(room, \"locked\");\n      room.log.push({time: Date.now(), user: connection.uname, command: \"lock\"});\n      return connection.ws.send(systemGenerator(\"Room is now locked.\"));\n    case \"unlock\":\n      if(!connection.isOwner) return connection.ws.send(errorGenerator(\"Unauthorized. Must be owner to use commands.\"));\n      if(room.status !== \"locked\") return connection.ws.send(errorGenerator(\"Error: Room is already unlocked\"));\n      if(room.connections.length < room.maxOccupants) await updateStatus(room, \"open\");\n      else await updateStatus(room, \"at capacity\");\n      room.log.push({time: Date.now(), user: connection.uname, command: \"unlock\"});\n      return connection.ws.send(systemGenerator(\"Room is now unlocked.\"));\n    case \"start\":\n    case \"stop\":\n    case \"skipTo\":\n      if(!payload.timestamp) return connection.ws.send(errorGenerator(\"Error. Must have a timestamp.\"));\n      const time = Date.now();\n      room.log.push({time, user: connection.uname, command: payload.command, timestamp: payload.timestamp});\n      broadcast(room, JSON.stringify({time, type: \"control\", command: payload.command, timestamp: payload.timestamp}), connection.uname);\n  }\n};", "import { broadcast } from \"./utils\";\nimport type { Room } from \".\";\n\nconst handleDisconnect = (room: Room, connection: Connection) => broadcast(room, `User ${connection.uname} has disconnected.`, \"[SYSTEM]\");\nexport default handleDisconnect;", "import { generateErrorResponse, usernameDoesNotExist } from \"utils\";\nimport analyticsUpdate from \"./AnalyticsUpdate\";\nimport handleMessage from \"./MessageHandler\";\nimport { closeAll } from \"./utils\";\nimport handleDisconnect from \"./ErrorHandler\";\n\nexport class Room {\n  ids: IDs;\n  storage: DurableObjectStorage;\n  blockConcurrencyWhile: DurableObjectState[\"blockConcurrencyWhile\"];\n  env: Environment;\n  owner: Connection | undefined;\n  connections: Connection[] = [];\n  maxOccupants: number;\n  log: any[] = [];\n  status: RoomStatus = \"open\";\n  isGDPR = true;\n  videoLength: number | undefined;\n  videoReady = false;\n\n  constructor(state: DurableObjectState, env: Environment) {\n    this.ids = {\n      do: state.id.toString()\n    };\n    this.storage = state.storage;\n    this.blockConcurrencyWhile = state.blockConcurrencyWhile;\n    this.env = env;\n    this.maxOccupants = Number(env.MaxOccupants);\n    this.blockConcurrencyWhile(async () => {\n      const status = await this.storage.get<RoomStatus>(\"status\");\n      if(status) this.status = status;\n    });\n  }\n\n  // Private method to connect a user to the room.\n  private async connect(req: Request) : Promise<Response> {\n    if(this.status !== \"open\") return generateErrorResponse(`Room is ${this.status}`, 503);\n    const uname = req.headers.get(\"uname\"),\n      isOwner = Boolean(req.headers.get(\"isOwner\"));\n    if(!uname) return usernameDoesNotExist();\n    if(isOwner && this.connections.find(e => e.isOwner)) return generateErrorResponse(\"Owner already connected\");\n    if(this.connections.find(e => e.uname === uname)) return generateErrorResponse(\"Username already connected\");\n    const [client, server] = Object.values(new WebSocketPair());\n    server.accept();\n    const connection: Connection = {\n      uname,\n      isOwner,\n      location: req.cf?.country,\n      ws: server,\n    };\n    server.addEventListener(\"message\", async event => handleMessage(this, connection, event));\n    server.addEventListener(\"close\", () => handleDisconnect(this, connection));\n    if(connection.isOwner) this.owner = connection;\n    this.connections.push(connection);\n    if(this.connections.length >= this.maxOccupants) {\n      this.status = \"at capacity\";\n      if(!this.ids.external) return generateErrorResponse(\"Room has not been initiated\", 500);\n      await this.env.KV.put(`${this.env.KVPrefix}-${this.ids.external}`, JSON.stringify({\n        status: this.status,\n        ownerId: this.ids.external,\n        doId: this.ids.do\n      }));\n    }\n    return new Response(\"Upgrade in progress\", {status: 101, webSocket: client});\n  }\n\n  async fetch(req: Request) : Promise<Response> {\n    const path = new URL(req.url).pathname;\n    switch(path) {\n      case \"/startup\":\n        const data = await req.json() as StartupData;\n        this.ids.external = data.external;\n        this.ids.owner = data.owner;\n        this.ids.name = data.name;\n        this.isGDPR = data.isGDPR;\n        this.videoLength = data.videoLength;\n        if(data.maxOccupants) this.maxOccupants = data.maxOccupants;\n        await this.storage.setAlarm(Date.now() + 60000);\n        return new Response(\"OK\");\n      case \"/ready\":\n        this.videoReady = true;\n        return new Response(\"OK\");\n      case \"/delete\":\n        await closeAll(this);\n        await this.storage.deleteAll();\n        return new Response(\"Room deleted\", {status: 200});\n      case \"/connect\":\n        if(!this.videoReady) return generateErrorResponse(\"Video has not finished processing\");\n        return this.connect(req);\n    }\n    return new Response(\"Invalid Internal URL\", {status: 404});\n  }\n\n  async alarm() {\n    if(this.status === \"ended\") {\n      await this.env.KV.put(`${this.env.KVPrefix}-${this.ids.external}-log`, JSON.stringify(this.log), {metadata: {owner: this.ids.owner}});\n      return await this.storage.deleteAll();\n    }\n    await this.storage.put(\"log\", this.log);\n    analyticsUpdate(this);\n    await this.storage.setAlarm(Date.now() + 60000);\n  }\n}", "export class Analytics {\n  private readonly blockConcurrencyWhile: DurableObjectState[\"blockConcurrencyWhile\"];\n  private readonly storage: DurableObjectState[\"storage\"];\n  private readonly prefix: string;\n  private readonly kv: KVNamespace;\n  private data: AnalyticsData | undefined;\n\n  constructor({blockConcurrencyWhile, storage}: DurableObjectState, {KVPrefix, KV}: Environment) {\n    this.blockConcurrencyWhile = blockConcurrencyWhile;\n    this.storage = storage;\n    this.prefix = KVPrefix;\n    this.kv = KV;\n    this.blockConcurrencyWhile(async () => {\n      const data = await this.storage.get<AnalyticsData>(\"data\");\n      this.data = data || {};\n      await this.storage.setAlarm(Date.now() + 60000);\n    });\n  }\n\n  public alarm() {\n    this.blockConcurrencyWhile(async () => {\n      if(!this.data) this.data = await this.storage.get<AnalyticsData>(\"data\") || {};\n      let rooms: number, occupants: number;\n      rooms = occupants = 0;\n      const countries = Object.values(this.data).reduce((a, b) => {\n        Object.entries(b).forEach(c => {\n          a[c[0]] = (a[c[0]] || 0) + c[1];\n          occupants++;\n      });\n        rooms++;\n        return a;\n      }, {}),\n        ret = {\n          countries,\n          rooms,\n          occupants,\n          timestamp: Date.now() \n        };\n      this.data = {};\n      await Promise.all([this.storage.delete(\"data\"), this.kv.put(`${this.prefix}-analytics`, JSON.stringify({ret}))]);\n      await this.storage.setAlarm(Date.now() + 60000);\n    });\n  }\n\n  public async fetch(req: Request): Promise<Response> {\n    if(!this.data) this.data = await this.storage.get<AnalyticsData>(\"data\") || {};\n    const {room, data} = await req.json() as AnalyticsDeliverable;\n    this.data[room] = data;\n    this.storage.put(\"data\", this.data);\n    return new Response(null, {status: 204});\n  }\n}"],
  "mappings": "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",
  "names": []
}
